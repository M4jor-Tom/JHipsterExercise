// Ensemble des tables et de leurs arguments

// Table contenant toutes les infos client
entity Client {
    addedDateTime ZonedDateTime required,
    lastName String required,
    firstName String required,
    email String,
    phone String,
    adress String,
    country String required,
    postalCode String required
}
// Table contenant le détail de la commande
entity Order {
	sum Double,
    deliveryAdress String required,
    deliveryDateTime ZonedDateTime required,
    quantity Long required,
    billingMethod BillingMethod required
    orderState OrderState required
}

enum BillingMethod {
	PAYPAL,
    CREDIT_CARD
}

enum OrderState {
	PROCESSING,
    PAID
}

// Table contenant les informations de connexions
entity Connection {
    username String required,
    password String required
}

// Table contenant les infos générales d'un Produit
entity Product {
    description String,
    photoId Long,
    stock Long required,
    price Double required,
    modelName String required,
    color Color
}

entity Tag {
	name String required
}

entity Seller {
	socialReason String required,
    address String required,
    siretNumber String,
    phone Long,
    email String required
}

enum Color {
	PURPLE,
    BLUE,
    GREEN,
    YELLOW,
	ORANGE,
    RED
}

entity Brand {
	name String required
}

// Table contenant les informations d'une famille de produits
entity Family {
    name String required
}

entity SubFamily {
	name String required
}

relationship ManyToMany {
	Product{tags(name)} to Tag{products(modelName)}
    
    
    Order{products(modelName)} to Product{order(deliveryDateTime)}
}

relationship ManyToOne {
	Product{subFamily(name) required} to SubFamily
    
    SubFamily{family(name) required} to Family
    
    Product{brand(name) required} to Brand
    
	Product{Seller(email) required} to Seller{product(modelName)}
}

relationship OneToMany {
	Client{order(deliveryDateTime)} to Order
}

relationship OneToOne {
	Client{connection(username)} to Connection
    
	Seller{connection(username)} to Connection
}